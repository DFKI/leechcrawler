Jacksum 1.5.1, 2004-11-06
- regression bug fixed: when option -l is used, removed files will not be
  printed out to the standard output anymore
  Thanks to Sabrina Rolleman, Canada for the bugreport
- sourceforge feature request #1028824 has been implemented
  (add homepage URI if -m is used)
  Thanks to Lee A. Davis for the feature request
- improved documentation

Jacksum 1.5.0, 2004-08-08
- four new algorithms are supported: ed2k/eDonkey/eMule, CRC-64, ELF-32, FCS-16
  Thanks to Henrique Malheiro, Portugal for the eDonkey reference implementation
- sourceforge bug #948070 has been fixed (-c won't work if -t has been set)
  Thanks to Lee A. Davis for the bugreport
- bug fixed: Jacksum hangs if it reaches a fifo under Unix/Linux
- bug fixed: files which are used by another process can't be processed properly
- new option -d for ignoring symbolic links to directories under Unix/Linux to avoid
  enless loops in particular cases
- improved option -q to support not only hex, but also text and decimal formats
- new option -F for being able to customize the output format
  see also sourceforge feature request #968469 (show file length on MD5)
- new option -P to print out filenames with a customized separator
- lists created with -m are platform independent now, you can verify files against
  a list on Linux/Unix if the list has been created on Windows for example
- new option -S to calculate just one fingerprint (summary)
  Thanks to Berthold Kohlmann, Germany for this feature request
- sourceforege feature request #968491 has been implemented 
  (Handle pre 1.5 time formats with -c), thanks to Lee A. Davis for the request
- sourceforge feature request #968487 has been implemented (list dir argument as comment)
  Thanks to Lee A. Davis for the feature request
- new option -A to specify alternate implementations of one of the following algorithms
  crc32, md5, sha-1, sha-256, sha-384, sha-512
- added alias called FCS-32 for CRC-32
- added alias called SHA-160 for SHA-1
- Java version check also for IBM's Java VM
- tested successfully with JRE 1.5 beta3

Jacksum 1.4.0, 2004-02-01
- three new algorithms are supported: Tiger, Haval and 
  the MPEG spec of CRC-32
  Thanks to Chris Ash, Southampton, UK for suggesting this feature based
  on existing GPL code (VideoLan project)
- Haval can have both length (128, 160, 192, 224 or 256 bits) 
  and round parameters (3 to 5)
- algorithms sha-256, sha-384 and sha-512 are also supported with JRE 1.3 now
- new option -p for including path info on each line when recursively
  file processing is requested, this makes it easier to sort or grep
  ouput lines
  Thanks to Douglas E. W. for both feature request and reference implementation
- new option -e for comparison against an expected checksum
  Thanks to Daniel Ellermann, Germany for both feature request and
  reference implementation
- new option -l to show a list of modified or deleted files, list can be used
  to feed the zip command
- exits, if parameter -t does not contain supported characters
- version check introduced for better compatibility
- improved comments for sourcecode called Crc16.java
- documentation updated with Mac OS X information
- requires at least JRE 1.3.1, 1.4.2 is recommended

Jacksum 1.3.0, 2003-11-02
- eight new algorithms are supported: sha-256, sha-384 and sha-512 
  (requires Java 1.4.2 or later), xor8, sum8, sum16, sum24 and sum32
- option to check files against a given list (option -c)
  Thanks to Leonardo A. Pires, Brazil for this feature request
  Thanks a lot to Christian F., London, UK for his reference implementation
- option to create meta-information (option -m); while checking against
  a list, you don't have to enter the original command line options again
- timestamps of files can be part of the output (option -t)
  Thanks to Vishwanathan Narayanan, Florida, USA for this feature request
  with the option -c you can check against both content and timestamps
- the output format of timestamps is highly configurable
- process a hex sequence quickly (option -q)
  Thanks to Jack Memishian, USA for this feature request
- bug fixed: algorithm cksum hangs, if a file is greater than 2 GB
- bug fixed: processing special file system folders, like Windows' 
  "System Volume Information" throws to a NullPointerException
- stdout and stderr are separete streams now
- Jacksum is using the GNU crypto package 1.1
  (http://www.gnu.org/software/gnu-crypto/)
- documentation updated

Jacksum 1.2.0, 2003-02-16
- four new algorithms from the GNU crypto project are supported: 
  MD4, RIPEMD-128, RIPEMD-160 and Whirlpool
  (http://www.gnu.org/software/classpathx/crypto/)
- bug fixed: calling the getValue() method more than once for the Cksum 
  class returns a different value; this can cause problems if Jacksum 
  will be used in other projects.
  Thanks to Cary Coulter for both, bug report and fix.
- bug fixed: CRC16 does not work like the standard CRC16
  generator poly X^16 + X^15 + X^2 + 1.
  Thanks to David Elfi, Argentina for both bug report and fix
- provided compatibility with free Kaffe Java VM
  (Java version check only for Sun's Java VM)
- option -v to get the version of Jacksum

Jacksum 1.1.2, 2003-01-19
- bug fixed: input file will not be closed; this can cause 
  problems if Jacksum will be used in other projects.
  Thanks to Bill Kelemen for both, bug report and fix.
- faster algorithm for output of checksums in hex format
- documentation updated (Solaris 9+ has a md5 application)

Jacksum 1.1.1, 2002-11-07
- bug fixed: algorithm sysv returns invalid checksum if files are greater 
  than ~9 MB. Thanks to Sunny Liu, NYC for both bug report and fix.

Jacksum 1.1.0, 2002-09-08
- options for hexadecimal checksum output (lower- and uppercase)
  Thanks to Peter Frey, Germany for this feature request
- filenames/directories will be sorted alphabetically

Jacksum 1.0.0, 2002-07-07
- initial public release 
- requires at least JRE 1.3.0
- algorithms Adler32, BSD sum, POSIX cksum, CRC-16, CRC-32, MD2, MD5, 
  SHA1 and Unix System V sum are supported
- processing of subdirectories is supported
- a custom separator string can be defined
